name: Deploy

on:
  push:
    # branches:
    #   - main
    branches-ignore:
      - '*'

jobs:
    ghcr:
        name: Docker
        runs-on: ubuntu-latest
        permissions:
            contents: write
            packages: write
            attestations: write
            id-token: write

        steps:
        - name: Checkout repository
          uses: actions/checkout@v4
    
        - name: Log in to GitHub Container Registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        
        - name: Build and push Api Docker image
          run: |
            docker build \
              --build-arg SECRET_KEY="${{ secrets.SECRET_KEY }}" \
              --build-arg DEBUG="${{ secrets.DEBUG }}" \
              --build-arg ALLOWED_HOSTS="${{ secrets.ALLOWED_HOSTS }}" \
              --build-arg CSRF_TRUSTED_ORIGINS="${{ secrets.CSRF_TRUSTED_ORIGINS }}" \
              --build-arg DEFAULT_API_URL="${{ secrets.DEFAULT_API_URL }}" \
              --build-arg POSTGRES_DB="${{ secrets.POSTGRES_DB }}" \
              --build-arg POSTGRES_USER="${{ secrets.POSTGRES_USER }}" \
              --build-arg POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}" \
              --build-arg POSTGRES_HOST="${{ secrets.POSTGRES_HOST }}" \
              --build-arg POSTGRES_PORT="${{ secrets.POSTGRES_PORT }}" \
              -t ghcr.io/${{ vars.repository_owner }}/team_todolist-api:latest ./backend
            docker push ghcr.io/${{ vars.repository_owner }}/team_todolist-api:latest

        - name: Logout from GHCR
          run: docker logout ghcr.io

    deploy:
        needs: [ghcr]
        runs-on: ubuntu-latest
        steps:
            - name: Deploy using ssh
              uses: appleboy/ssh-action@v1.0.3
              with:
                host: ${{ secrets.SSH_HOST }}
                username: ${{ secrets.SSH_USERNAME }}
                key: ${{ secrets.SSH_KEY }}
                port: ${{ secrets.SSH_PORT }}
                script: |
                    docker stack ls | grep todolist_stack && docker stack rm todolist_stack
                    cd todolist/

                    docker login ghcr.io --username ${{ github.actor }} --password-stdin <<< "${{ secrets.GITHUB_TOKEN }}"     
                    docker pull ghcr.io/${{ vars.repository_owner }}/team_todolist-api:latest

                    docker stack deploy --detach=false -c compose.prod.yaml todolist_stack

                    docker logout ghcr.io
